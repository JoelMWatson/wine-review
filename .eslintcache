[{"/home/joel/Projects/wine-reviews/src/index.js":"1","/home/joel/Projects/wine-reviews/src/App.js":"2","/home/joel/Projects/wine-reviews/src/components/Header.js":"3","/home/joel/Projects/wine-reviews/src/components/ReviewTable.js":"4","/home/joel/Projects/wine-reviews/src/components/ReviewSelect.js":"5"},{"size":220,"mtime":1609726440973,"results":"6","hashOfConfig":"7"},{"size":1135,"mtime":1609730026018,"results":"8","hashOfConfig":"7"},{"size":192,"mtime":1609729742811,"results":"9","hashOfConfig":"7"},{"size":1105,"mtime":1609731872139,"results":"10","hashOfConfig":"7"},{"size":816,"mtime":1609729930658,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"19srs1k",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/home/joel/Projects/wine-reviews/src/index.js",[],["24","25"],"/home/joel/Projects/wine-reviews/src/App.js",["26","27"],"import { useState, useEffect } from 'react';\n\nimport './App.css';\nimport Header from './components/Header';\nimport ReviewSelect from './components/ReviewSelect';\nimport ReviewTable from './components/ReviewTable';\n\nconst reviews = require('./reviews.json');\n\n// helper function\nfunction onlyUnique(value, index, self) {\n  return self.indexOf(value) === index;\n}\n\nfunction App() {\n  const [country, setCountry] = useState(reviews[0].country);\n\n  let countryReviews = reviews.filter((review) => {\n    return review.country === country;\n  });\n  let countries = reviews.map((review) => review.country).filter(onlyUnique);\n\n  useEffect(() => {\n    countryReviews = reviews.filter((review) => {\n      return review.country === country;\n    });\n    countries = reviews.map((review) => review.country).filter(onlyUnique);\n  }, [country]);\n\n  return (\n    <div className='App'>\n      <Header />\n      <ReviewSelect\n        numReviews={countryReviews.length}\n        countries={countries}\n        selected={country}\n        updateSelect={setCountry}\n      />\n      <ReviewTable reviews={countryReviews} />\n    </div>\n  );\n}\n\nexport default App;\n","/home/joel/Projects/wine-reviews/src/components/Header.js",[],"/home/joel/Projects/wine-reviews/src/components/ReviewTable.js",[],"/home/joel/Projects/wine-reviews/src/components/ReviewSelect.js",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":24,"column":22,"nodeType":"34","endLine":26,"endColumn":7},{"ruleId":"32","severity":1,"message":"35","line":27,"column":17,"nodeType":"34","endLine":27,"endColumn":75},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"react-hooks/exhaustive-deps","Assignments to the 'countryReviews' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'countries' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-global-assign","no-unsafe-negation"]